<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c8efadf5-13fe-4ee4-b5a7-764790ca8201" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change beforePath="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/config/config.go" afterPath="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/config/config.go" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="README.md" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="120">
                <caret line="8" column="3" lean-forward="true" selection-start-line="8" selection-start-column="3" selection-end-line="8" selection-end-column="3" />
                <folding />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="default.tpl" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/templates/default.tpl">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="345">
              <caret line="23" column="0" lean-forward="true" selection-start-line="23" selection-start-column="0" selection-end-line="23" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="certs.json" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/temp/certs.json">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="180">
              <caret line="12" column="0" lean-forward="true" selection-start-line="12" selection-start-column="0" selection-end-line="12" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="docker.yaml" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/temp/docker.yaml">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="465">
              <caret line="31" column="0" lean-forward="true" selection-start-line="31" selection-start-column="0" selection-end-line="31" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="default.conf" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/temp/default.conf">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="577">
              <caret line="62" column="60" lean-forward="true" selection-start-line="62" selection-start-column="60" selection-end-line="62" selection-end-column="60" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="main.go" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main/main.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="423">
              <caret line="150" column="0" lean-forward="true" selection-start-line="150" selection-start-column="0" selection-end-line="150" selection-end-column="0" />
              <folding>
                <element signature="e#14#245#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="config.go" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/config/config.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="245">
              <caret line="27" column="49" lean-forward="false" selection-start-line="27" selection-start-column="49" selection-end-line="27" selection-end-column="49" />
              <folding>
                <element signature="e#16#176#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="sleep.go" pinned="false" current-in-tab="false">
        <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/time/sleep.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="120">
              <caret line="8" column="5" lean-forward="false" selection-start-line="8" selection-start-column="5" selection-end-line="8" selection-end-column="5" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Dockerfile" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/certbot/Dockerfile">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="210">
              <caret line="14" column="0" lean-forward="true" selection-start-line="14" selection-start-column="0" selection-end-line="14" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="entrypoint.sh" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/entrypoint/entrypoint.sh">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>fileInfo</find>
      <find>watcher</find>
      <find>WRITE</find>
      <find>1519293465</find>
      <find>1519293506</find>
      <find>Certificates</find>
      <find>1519293504</find>
      <find>1519293574</find>
      <find>parseCerts</find>
      <find>cert</find>
      <find>path</find>
      <find>certsConfigPath</find>
      <find>nginxReloadArgs</find>
      <find>proxy_pass</find>
      <find>Output</find>
      <find>/etc/nginx/conf.d/default.conf</find>
      <find>$</find>
      <find>$vhost</find>
      <find>Certbot</find>
      <find>$p</find>
      <find>nginx</find>
      <find>certificateConfigPath</find>
      <find>Reading certificate config fil</find>
      <find>Domains</find>
      <find>./</find>
      <find>STAGING</find>
      <find>Open certificates config file</find>
      <find>0</find>
    </findStrings>
    <replaceStrings>
      <replace>main</replace>
      <replace>/root</replace>
    </replaceStrings>
    <dirStrings>
      <dir>$PROJECT_DIR$/src/github.com/go-fsnotify</dir>
    </dirStrings>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.9.3/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$" />
      </list>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/main/config.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/config/config.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/main/main.go" />
        <option value="$PROJECT_DIR$/temp/domains.json" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/main/main.go" />
        <option value="$PROJECT_DIR$/temp/certs.json" />
        <option value="$PROJECT_DIR$/Dockerfile" />
        <option value="$PROJECT_DIR$/temp/default.conf" />
        <option value="$PROJECT_DIR$/nginx-proxy/Dockerfile" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/config/config.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main/main.go" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/certbot/Dockerfile" />
        <option value="$PROJECT_DIR$/docker-compose.yaml" />
        <option value="$PROJECT_DIR$/temp/docker.yaml" />
        <option value="$PROJECT_DIR$/templates/default.tpl" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main/main.go" />
        <option value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/config/config.go" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="121" />
    <option name="y" value="23" />
    <option name="width" value="2375" />
    <option name="height" value="1392" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="certbot" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="entrypoint" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="nginx-proxy" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
              <item name="weishi258" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
              <item name="weishi258" type="462c0819:PsiDirectoryNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
              <item name="weishi258" type="462c0819:PsiDirectoryNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="certbothelper" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
              <item name="weishi258" type="462c0819:PsiDirectoryNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="certbothelper" type="462c0819:PsiDirectoryNode" />
              <item name="config" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="github.com" type="462c0819:PsiDirectoryNode" />
              <item name="weishi258" type="462c0819:PsiDirectoryNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="certbothelper" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="temp" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="temp" type="462c0819:PsiDirectoryNode" />
              <item name="letsencrypt" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="nginx-certbot-swarm-docker" type="b2602c69:ProjectViewProjectNode" />
              <item name="nginx-certbot-swarm-docker" type="462c0819:PsiDirectoryNode" />
              <item name="templates" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scratches" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main" />
      <recent name="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main" />
      <recent name="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator" />
      <recent name="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/config" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.CertbotHelper">
    <configuration name="CertbotHelper" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="nginx-proxy" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <parameters value="-interval 5" />
      <envs>
        <env name="DOMAINS" value="www.toppers.com.cn,api.toppers.com.cn" />
        <env name="EMAIL" value="wei.shi@boxinholding.com" />
      </envs>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <output_directory value="bin" />
    </configuration>
    <configuration name="Generator" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="nginx-proxy" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <parameters value="-out temp/default.conf -template templates/default.tpl  -certs temp/certs.json " />
      <envs>
        <env name="DOMAINS" value="test.local=usermgr:8111,whoami.local=usermgr:8111" />
        <env name="CERTBOT" value="certbot" />
      </envs>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/main/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <output_directory value="$PROJECT_DIR$/bin" />
    </configuration>
    <configuration name="Watcher" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="nginx-proxy" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <parameters value="-out temp/default.conf  -certs temp/certs.json -template templates/default.tpl -generator bin/Generator -nginx &quot;nginx -s reload&quot;" />
      <envs>
        <env name="DOMAINS" value="test.local=nginx-test:80" />
        <env name="CERTBOT" value="True" />
      </envs>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main/main.go" />
      <directory value="$PROJECT_DIR$/" />
      <output_directory value="bin" />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="nginx-proxy" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <envs>
        <env name="DOMAINS" value="test.local=usermgr:8111,whoami.local=usermgr:8111" />
      </envs>
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/" />
      <directory value="$PROJECT_DIR$/" />
      <output_directory value="bin" />
    </configuration>
    <configuration default="true" type="DjangoTestsConfigurationType" factoryName="Django tests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
    </configuration>
    <configuration default="true" type="PyLettuceRunConfigurationType" factoryName="Lettuce">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <module name="nginx-certbot-swarm-docker" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="_new_regexPattern" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="nginx-certbot-swarm-docker" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
    </configuration>
    <list size="3">
      <item index="0" class="java.lang.String" itemvalue="Go Build.Generator" />
      <item index="1" class="java.lang.String" itemvalue="Go Build.Watcher" />
      <item index="2" class="java.lang.String" itemvalue="Go Build.CertbotHelper" />
    </list>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="121" y="23" width="2375" height="1392" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.25417918" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Docker" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="false" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299923" sideWeight="0.5015002" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299923" sideWeight="0.49849978" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3299923" sideWeight="0.49849978" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3993832" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Python Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3299923" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Data View" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32957748" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.py" />
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.tpl" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="20" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/nginx-proxy/templates/default.tpl" />
    <entry file="file://$PROJECT_DIR$/nginx-proxy/temp/default.conf" />
    <entry file="file://$PROJECT_DIR$/temp/html/.well-known/acme-challenge/test.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="32" lean-forward="false" selection-start-line="0" selection-start-column="32" selection-end-line="0" selection-end-column="32" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/nginx-proxy/entrypoint/entrypoint.sh" />
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="225">
          <caret line="24" column="0" lean-forward="true" selection-start-line="24" selection-start-column="0" selection-end-line="24" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/certs.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="12" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/default.conf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="0" lean-forward="false" selection-start-line="25" selection-start-column="0" selection-end-line="29" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/exec/exec.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1905">
          <caret line="139" column="0" lean-forward="false" selection-start-line="139" selection-start-column="0" selection-end-line="139" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/strings/strings.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4350">
          <caret line="293" column="5" lean-forward="false" selection-start-line="293" selection-start-column="5" selection-end-line="293" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/time/time.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="16440">
          <caret line="1096" column="14" lean-forward="false" selection-start-line="1096" selection-start-column="14" selection-end-line="1096" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/config/config.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="720">
          <caret line="56" column="57" lean-forward="false" selection-start-line="56" selection-start-column="57" selection-end-line="56" selection-end-column="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/main/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="465">
          <caret line="37" column="16" lean-forward="false" selection-start-line="37" selection-start-column="16" selection-end-line="37" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/templates/default.tpl">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="465">
          <caret line="31" column="2" lean-forward="true" selection-start-line="31" selection-start-column="2" selection-end-line="31" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/html/template/template.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="281">
          <caret line="377" column="5" lean-forward="false" selection-start-line="377" selection-start-column="5" selection-end-line="377" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/text/template/exec.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="349">
          <caret line="173" column="42" lean-forward="false" selection-start-line="173" selection-start-column="42" selection-end-line="173" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/regexp/regexp.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="281">
          <caret line="131" column="34" lean-forward="false" selection-start-line="131" selection-start-column="28" selection-end-line="131" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/flag/flag.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="700" column="5" lean-forward="false" selection-start-line="700" selection-start-column="5" selection-end-line="700" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/text/template/helper.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="259">
          <caret line="37" column="0" lean-forward="false" selection-start-line="37" selection-start-column="0" selection-end-line="37" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/env.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="274">
          <caret line="79" column="5" lean-forward="false" selection-start-line="79" selection-start-column="5" selection-end-line="79" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/go-fsnotify/fsnotify/windows.go" />
    <entry file="file://$PROJECT_DIR$/src/github.com/go-fsnotify/fsnotify/kqueue.go" />
    <entry file="file://$PROJECT_DIR$/src/golang.org/x/sys/unix/zerrors_darwin_amd64.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="176">
          <caret line="1028" column="43" lean-forward="true" selection-start-line="1028" selection-start-column="43" selection-end-line="1028" selection-end-column="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/go-fsnotify/fsnotify/fsnotify_test.go" />
    <entry file="file://$PROJECT_DIR$/src/github.com/go-fsnotify/fsnotify/fsnotify.go" />
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/file_unix.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="281">
          <caret line="146" column="5" lean-forward="false" selection-start-line="146" selection-start-column="5" selection-end-line="146" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/types.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="675">
          <caret line="48" column="65" lean-forward="false" selection-start-line="48" selection-start-column="65" selection-end-line="48" selection-end-column="65" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/stat_unix.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="600">
          <caret line="42" column="33" lean-forward="false" selection-start-line="42" selection-start-column="33" selection-end-line="42" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/time/time.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="16440">
          <caret line="1096" column="14" lean-forward="false" selection-start-line="1096" selection-start-column="14" selection-end-line="1096" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/domains.json" />
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/strings/strings.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4350">
          <caret line="293" column="5" lean-forward="false" selection-start-line="293" selection-start-column="5" selection-end-line="293" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Dockerfile" />
    <entry file="file://$PROJECT_DIR$/certbot/entrypoint.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" column="15" lean-forward="false" selection-start-line="10" selection-start-column="15" selection-end-line="10" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/exec/exec.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="424">
          <caret line="139" column="5" lean-forward="false" selection-start-line="139" selection-start-column="5" selection-end-line="139" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/encoding/json/encode.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="424">
          <caret line="158" column="5" lean-forward="false" selection-start-line="158" selection-start-column="5" selection-end-line="158" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/os/file.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="424">
          <caret line="135" column="15" lean-forward="false" selection-start-line="135" selection-start-column="15" selection-end-line="135" selection-end-column="15" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/watcher/main/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="441">
          <caret line="105" column="15" lean-forward="false" selection-start-line="105" selection-start-column="15" selection-end-line="105" selection-end-column="15" />
          <folding>
            <element signature="e#14#99#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/main/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" column="21" lean-forward="false" selection-start-line="14" selection-start-column="21" selection-end-line="14" selection-end-column="21" />
          <folding>
            <element signature="e#14#134#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/generator/config/config.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="31" column="4" lean-forward="false" selection-start-line="31" selection-start-column="4" selection-end-line="31" selection-end-column="4" />
          <folding>
            <element signature="e#16#117#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/strconv/atob.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="135">
          <caret line="9" column="5" lean-forward="false" selection-start-line="9" selection-start-column="5" selection-end-line="9" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/docker-compose.yaml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="24" column="38" lean-forward="true" selection-start-line="0" selection-start-column="0" selection-end-line="36" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/nginx-proxy/Dockerfile">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="10" column="12" lean-forward="false" selection-start-line="10" selection-start-column="12" selection-end-line="10" selection-end-column="12" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/entrypoint/entrypoint.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/certbot/Dockerfile">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="14" column="0" lean-forward="true" selection-start-line="14" selection-start-column="0" selection-end-line="14" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/default.conf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="577">
          <caret line="62" column="60" lean-forward="true" selection-start-line="62" selection-start-column="60" selection-end-line="62" selection-end-column="60" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/certs.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="0" lean-forward="true" selection-start-line="12" selection-start-column="0" selection-end-line="12" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.9.3/libexec/src/time/sleep.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="8" column="5" lean-forward="false" selection-start-line="8" selection-start-column="5" selection-end-line="8" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/templates/default.tpl">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" column="0" lean-forward="true" selection-start-line="23" selection-start-column="0" selection-end-line="23" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/temp/docker.yaml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="465">
          <caret line="31" column="0" lean-forward="true" selection-start-line="31" selection-start-column="0" selection-end-line="31" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="120">
            <caret line="8" column="3" lean-forward="true" selection-start-line="8" selection-start-column="3" selection-end-line="8" selection-end-column="3" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/main/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="423">
          <caret line="150" column="0" lean-forward="true" selection-start-line="150" selection-start-column="0" selection-end-line="150" selection-end-column="0" />
          <folding>
            <element signature="e#14#245#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/github.com/weishi258/nginx-certbot-swarm-docker/certbothelper/config/config.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="245">
          <caret line="27" column="49" lean-forward="false" selection-start-line="27" selection-start-column="49" selection-end-line="27" selection-end-column="49" />
          <folding>
            <element signature="e#16#176#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>